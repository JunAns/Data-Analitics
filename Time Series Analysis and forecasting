{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN+KKMMf6vLEgACGcg9XbFz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JunAns/Data-Analitics/blob/main/Time%20Series%20Analysis%20and%20forecasting\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mKeWwAof8TTt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "87afb0b5-f00d-4302-d00e-1b7b6d43dd23"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n",
            "/content/drive/MyDrive/Colab Notebooks\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "%cd '/content/drive/MyDrive/Colab Notebooks'"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "df1 = pd.read_csv('bitcoin_price.csv', index_col=\"date\", parse_dates=True)\n",
        "df1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 257
        },
        "id": "GaIsfG0n9hKk",
        "outputId": "e7012a26-1781-4a1b-ec73-527a4896f313"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  open        high         low       close      volume  \\\n",
              "date                                                                     \n",
              "2015-01-02  314.079010  315.838989  313.565002  315.032013   7860650.0   \n",
              "2015-01-03  314.846008  315.149994  281.082001  281.082001  33054400.0   \n",
              "2015-01-04  281.145996  287.230011  257.612000  264.195007  55629100.0   \n",
              "2015-01-05  265.084015  278.341003  265.084015  274.473999  43962800.0   \n",
              "2015-01-06  274.610992  287.553009  272.696014  286.188995  23245700.0   \n",
              "\n",
              "                 rsi_7      rsi_14       cci_7      cci_14      sma_50  \\\n",
              "date                                                                     \n",
              "2015-01-02  100.000000  100.000000  -66.666667  -66.666667  314.640503   \n",
              "2015-01-03    1.938583    2.096744 -100.000000 -100.000000  303.454336   \n",
              "2015-01-04    1.235506    1.375421 -110.693896 -110.693896  293.639503   \n",
              "2015-01-05   21.462825   19.523695  -76.487357  -76.487357  289.806403   \n",
              "2015-01-06   38.272356   34.350787  -37.070244  -37.070244  289.203501   \n",
              "\n",
              "                ema_50     sma_100     ema_100      macd   bollinger  \\\n",
              "date                                                                   \n",
              "2015-01-02  314.648333  314.640503  314.644418  0.017568  314.640503   \n",
              "2015-01-03  303.009081  303.454336  303.232458 -1.030403  303.454336   \n",
              "2015-01-04  292.715747  293.639503  293.178382 -2.091487  293.639503   \n",
              "2015-01-05  288.769813  289.806403  289.286389 -2.215008  289.806403   \n",
              "2015-01-06  288.295540  289.203501  288.744005 -1.746686  289.203501   \n",
              "\n",
              "            TrueRange      atr_7     atr_14  next_day_close  \n",
              "date                                                         \n",
              "2015-01-02   2.273987   4.193073   4.275997      281.082001  \n",
              "2015-01-03  34.067993  15.719617  14.951008      264.195007  \n",
              "2015-01-04  29.618011  20.033779  19.034849      274.473999  \n",
              "2015-01-05  14.145996  18.468441  17.907070      286.188995  \n",
              "2015-01-06  14.856995  17.613461  17.300126      294.337006  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-212bd393-af47-4c29-8726-46b47ed407b4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>open</th>\n",
              "      <th>high</th>\n",
              "      <th>low</th>\n",
              "      <th>close</th>\n",
              "      <th>volume</th>\n",
              "      <th>rsi_7</th>\n",
              "      <th>rsi_14</th>\n",
              "      <th>cci_7</th>\n",
              "      <th>cci_14</th>\n",
              "      <th>sma_50</th>\n",
              "      <th>ema_50</th>\n",
              "      <th>sma_100</th>\n",
              "      <th>ema_100</th>\n",
              "      <th>macd</th>\n",
              "      <th>bollinger</th>\n",
              "      <th>TrueRange</th>\n",
              "      <th>atr_7</th>\n",
              "      <th>atr_14</th>\n",
              "      <th>next_day_close</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015-01-02</th>\n",
              "      <td>314.079010</td>\n",
              "      <td>315.838989</td>\n",
              "      <td>313.565002</td>\n",
              "      <td>315.032013</td>\n",
              "      <td>7860650.0</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>-66.666667</td>\n",
              "      <td>-66.666667</td>\n",
              "      <td>314.640503</td>\n",
              "      <td>314.648333</td>\n",
              "      <td>314.640503</td>\n",
              "      <td>314.644418</td>\n",
              "      <td>0.017568</td>\n",
              "      <td>314.640503</td>\n",
              "      <td>2.273987</td>\n",
              "      <td>4.193073</td>\n",
              "      <td>4.275997</td>\n",
              "      <td>281.082001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-03</th>\n",
              "      <td>314.846008</td>\n",
              "      <td>315.149994</td>\n",
              "      <td>281.082001</td>\n",
              "      <td>281.082001</td>\n",
              "      <td>33054400.0</td>\n",
              "      <td>1.938583</td>\n",
              "      <td>2.096744</td>\n",
              "      <td>-100.000000</td>\n",
              "      <td>-100.000000</td>\n",
              "      <td>303.454336</td>\n",
              "      <td>303.009081</td>\n",
              "      <td>303.454336</td>\n",
              "      <td>303.232458</td>\n",
              "      <td>-1.030403</td>\n",
              "      <td>303.454336</td>\n",
              "      <td>34.067993</td>\n",
              "      <td>15.719617</td>\n",
              "      <td>14.951008</td>\n",
              "      <td>264.195007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-04</th>\n",
              "      <td>281.145996</td>\n",
              "      <td>287.230011</td>\n",
              "      <td>257.612000</td>\n",
              "      <td>264.195007</td>\n",
              "      <td>55629100.0</td>\n",
              "      <td>1.235506</td>\n",
              "      <td>1.375421</td>\n",
              "      <td>-110.693896</td>\n",
              "      <td>-110.693896</td>\n",
              "      <td>293.639503</td>\n",
              "      <td>292.715747</td>\n",
              "      <td>293.639503</td>\n",
              "      <td>293.178382</td>\n",
              "      <td>-2.091487</td>\n",
              "      <td>293.639503</td>\n",
              "      <td>29.618011</td>\n",
              "      <td>20.033779</td>\n",
              "      <td>19.034849</td>\n",
              "      <td>274.473999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-05</th>\n",
              "      <td>265.084015</td>\n",
              "      <td>278.341003</td>\n",
              "      <td>265.084015</td>\n",
              "      <td>274.473999</td>\n",
              "      <td>43962800.0</td>\n",
              "      <td>21.462825</td>\n",
              "      <td>19.523695</td>\n",
              "      <td>-76.487357</td>\n",
              "      <td>-76.487357</td>\n",
              "      <td>289.806403</td>\n",
              "      <td>288.769813</td>\n",
              "      <td>289.806403</td>\n",
              "      <td>289.286389</td>\n",
              "      <td>-2.215008</td>\n",
              "      <td>289.806403</td>\n",
              "      <td>14.145996</td>\n",
              "      <td>18.468441</td>\n",
              "      <td>17.907070</td>\n",
              "      <td>286.188995</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-06</th>\n",
              "      <td>274.610992</td>\n",
              "      <td>287.553009</td>\n",
              "      <td>272.696014</td>\n",
              "      <td>286.188995</td>\n",
              "      <td>23245700.0</td>\n",
              "      <td>38.272356</td>\n",
              "      <td>34.350787</td>\n",
              "      <td>-37.070244</td>\n",
              "      <td>-37.070244</td>\n",
              "      <td>289.203501</td>\n",
              "      <td>288.295540</td>\n",
              "      <td>289.203501</td>\n",
              "      <td>288.744005</td>\n",
              "      <td>-1.746686</td>\n",
              "      <td>289.203501</td>\n",
              "      <td>14.856995</td>\n",
              "      <td>17.613461</td>\n",
              "      <td>17.300126</td>\n",
              "      <td>294.337006</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-212bd393-af47-4c29-8726-46b47ed407b4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-212bd393-af47-4c29-8726-46b47ed407b4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-212bd393-af47-4c29-8726-46b47ed407b4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e5a9540b-53cd-4305-a7a3-33a36fd514c1\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5a9540b-53cd-4305-a7a3-33a36fd514c1')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e5a9540b-53cd-4305-a7a3-33a36fd514c1 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 3406,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2015-01-02 00:00:00\",\n        \"max\": \"2024-04-29 00:00:00\",\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          \"2015-02-03 00:00:00\",\n          \"2024-04-19 00:00:00\",\n          \"2021-07-03 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17807.583857071124,\n        \"min\": 176.897003,\n        \"max\": 73079.375,\n        \"num_unique_values\": 3403,\n        \"samples\": [\n          269.306,\n          3516.139648,\n          10619.821289\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"high\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18232.358117798805,\n        \"min\": 211.731003,\n        \"max\": 73750.070313,\n        \"num_unique_values\": 3403,\n        \"samples\": [\n          276.51001,\n          3521.388184,\n          10657.837891\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17335.693731231648,\n        \"min\": 171.509995,\n        \"max\": 71334.09375,\n        \"num_unique_values\": 3404,\n        \"samples\": [\n          263.22699,\n          887.249023,\n          10472.356445\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17821.4206057739,\n        \"min\": 178.102997,\n        \"max\": 73083.5,\n        \"num_unique_values\": 3403,\n        \"samples\": [\n          266.272003,\n          3464.013428,\n          10575.974609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19327293178.22149,\n        \"min\": 7860650.0,\n        \"max\": 350967941479.0,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          40783700.0,\n          49920425401.0,\n          24383958643.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rsi_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.4997278141663,\n        \"min\": 1.2355063949826928,\n        \"max\": 100.0,\n        \"num_unique_values\": 3405,\n        \"samples\": [\n          74.21955293869641,\n          40.641917455144366,\n          44.35245956382563\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rsi_14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.270579408959518,\n        \"min\": 1.3754207781324652,\n        \"max\": 100.0,\n        \"num_unique_values\": 3405,\n        \"samples\": [\n          71.45059097063324,\n          49.214435603082535,\n          46.60416228588997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cci_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.82593748139523,\n        \"min\": -233.3333333333396,\n        \"max\": 233.3333333333347,\n        \"num_unique_values\": 3405,\n        \"samples\": [\n          80.65730037558512,\n          -76.84178744788247,\n          -114.7051754647432\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cci_14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111.41646420764249,\n        \"min\": -438.2388991391661,\n        \"max\": 396.35843245676176,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          -32.19410429500557,\n          -76.09132677508572,\n          43.56772051650485\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sma_50\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17173.241967001144,\n        \"min\": 232.2616196,\n        \"max\": 67553.55273454,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          247.19788179411765,\n          67371.13445330001,\n          36854.33250006\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ema_50\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17080.495405266956,\n        \"min\": 233.49984050049187,\n        \"max\": 64841.63482255307,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          240.81414481453487,\n          64537.59208076219,\n          38365.09736505133\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sma_100\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16506.556936860405,\n        \"min\": 237.87341035,\n        \"max\": 59166.95800797,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          247.19788179411765,\n          56974.58367204,\n          46760.8413282\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ema_100\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16430.066113371457,\n        \"min\": 237.4077348233588,\n        \"max\": 59920.84831117032,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          243.69014356089752,\n          58894.30824118428,\n          41764.44334607596\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"macd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1039.2189284330982,\n        \"min\": -5053.2740796169455,\n        \"max\": 5509.100558632264,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          -3.5062240821449397,\n          -985.6377343181812,\n          -1071.5560372072505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bollinger\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17592.08781554297,\n        \"min\": 226.38319925,\n        \"max\": 69130.13574235,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          229.45985025,\n          67055.73769545,\n          35132.4453126\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TrueRange\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1197.1039903536962,\n        \"min\": 1.02800000000002,\n        \"max\": 12864.621093999998,\n        \"num_unique_values\": 3402,\n        \"samples\": [\n          10.375,\n          33.63696299999992,\n          87.81054700000095\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atr_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1008.7205989544573,\n        \"min\": 2.9611066502080123,\n        \"max\": 6054.702900447147,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          21.57788791269454,\n          4089.615875166756,\n          2215.9022299335656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atr_14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 977.0691493119326,\n        \"min\": 3.555622342770657,\n        \"max\": 5003.1142385941575,\n        \"num_unique_values\": 3406,\n        \"samples\": [\n          21.64836180157734,\n          3785.8194278075257,\n          2604.293977369797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"next_day_close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17835.289485568777,\n        \"min\": 178.102997,\n        \"max\": 73083.5,\n        \"num_unique_values\": 3403,\n        \"samples\": [\n          274.02301,\n          3459.154053,\n          10549.329102\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df1 = pd.read_csv('bitcoin_price.csv', index_col=\"date\", parse_dates=True)\n",
        "df1.index"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JrmmRlf57w4T",
        "outputId": "e05b88e4-8477-4d49-8ed9-79f8f6757cca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DatetimeIndex(['2015-01-02', '2015-01-03', '2015-01-04', '2015-01-05',\n",
              "               '2015-01-06', '2015-01-07', '2015-01-08', '2015-01-09',\n",
              "               '2015-01-10', '2015-01-11',\n",
              "               ...\n",
              "               '2024-04-20', '2024-04-21', '2024-04-22', '2024-04-23',\n",
              "               '2024-04-24', '2024-04-25', '2024-04-26', '2024-04-27',\n",
              "               '2024-04-28', '2024-04-29'],\n",
              "              dtype='datetime64[ns]', name='date', length=3406, freq=None)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# resampling to Mpnthly frequency and calculate the mean closing price\n",
        "df1_monthly_mean = df1.resample('W').mean()\n",
        "df1_monthly_mean.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 257
        },
        "id": "J5LqSygu9HDK",
        "outputId": "0be0e425-5b06-4a16-c4ff-bfd4528b04cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  open        high         low       close        volume  \\\n",
              "date                                                                       \n",
              "2015-01-04  303.357005  306.072998  284.086334  286.769674  3.218138e+07   \n",
              "2015-01-11  280.600146  288.237435  274.653146  281.316140  2.346307e+07   \n",
              "2015-01-18  221.612145  235.065432  203.237858  214.185710  5.187317e+07   \n",
              "2015-01-25  225.235286  233.557857  221.317858  231.560429  2.702364e+07   \n",
              "2015-02-01  242.860715  256.862002  229.521859  239.319571  4.383436e+07   \n",
              "\n",
              "                rsi_7     rsi_14       cci_7      cci_14      sma_50  \\\n",
              "date                                                                   \n",
              "2015-01-04  34.391363  34.490722  -92.453521  -92.453521  303.911447   \n",
              "2015-01-11  36.650467  34.176140  -31.197864  -43.752732  288.703689   \n",
              "2015-01-18  26.699139  26.969048 -102.257286 -149.889730  269.754998   \n",
              "2015-01-25  50.411313  42.197367  110.287687    4.934801  252.030258   \n",
              "2015-02-01  49.334804  46.341602  -18.840361   36.136190  250.273733   \n",
              "\n",
              "                ema_50     sma_100     ema_100       macd   bollinger  \\\n",
              "date                                                                    \n",
              "2015-01-04  303.457720  303.911447  303.685086  -1.034774  303.911447   \n",
              "2015-01-11  287.874752  288.703689  288.280980  -1.469946  288.703689   \n",
              "2015-01-18  265.027331  269.754998  267.406555 -10.068371  269.754998   \n",
              "2015-01-25  244.323778  252.030258  248.082161 -10.037194  246.912638   \n",
              "2015-02-01  244.492978  250.273733  247.105547  -1.747224  233.381934   \n",
              "\n",
              "            TrueRange      atr_7     atr_14  next_day_close  \n",
              "date                                                         \n",
              "2015-01-04  21.986664  13.315490  12.753951      273.250336  \n",
              "2015-01-11  14.066001  16.449518  16.406338      280.362139  \n",
              "2015-01-18  32.108573  24.120986  22.032708      206.623568  \n",
              "2015-01-25  12.239999  19.742579  20.466581      239.933572  \n",
              "2015-02-01  27.391713  23.226073  22.321646      234.284716  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96465580-d17f-4c85-9995-4517dce96643\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>open</th>\n",
              "      <th>high</th>\n",
              "      <th>low</th>\n",
              "      <th>close</th>\n",
              "      <th>volume</th>\n",
              "      <th>rsi_7</th>\n",
              "      <th>rsi_14</th>\n",
              "      <th>cci_7</th>\n",
              "      <th>cci_14</th>\n",
              "      <th>sma_50</th>\n",
              "      <th>ema_50</th>\n",
              "      <th>sma_100</th>\n",
              "      <th>ema_100</th>\n",
              "      <th>macd</th>\n",
              "      <th>bollinger</th>\n",
              "      <th>TrueRange</th>\n",
              "      <th>atr_7</th>\n",
              "      <th>atr_14</th>\n",
              "      <th>next_day_close</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015-01-04</th>\n",
              "      <td>303.357005</td>\n",
              "      <td>306.072998</td>\n",
              "      <td>284.086334</td>\n",
              "      <td>286.769674</td>\n",
              "      <td>3.218138e+07</td>\n",
              "      <td>34.391363</td>\n",
              "      <td>34.490722</td>\n",
              "      <td>-92.453521</td>\n",
              "      <td>-92.453521</td>\n",
              "      <td>303.911447</td>\n",
              "      <td>303.457720</td>\n",
              "      <td>303.911447</td>\n",
              "      <td>303.685086</td>\n",
              "      <td>-1.034774</td>\n",
              "      <td>303.911447</td>\n",
              "      <td>21.986664</td>\n",
              "      <td>13.315490</td>\n",
              "      <td>12.753951</td>\n",
              "      <td>273.250336</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-11</th>\n",
              "      <td>280.600146</td>\n",
              "      <td>288.237435</td>\n",
              "      <td>274.653146</td>\n",
              "      <td>281.316140</td>\n",
              "      <td>2.346307e+07</td>\n",
              "      <td>36.650467</td>\n",
              "      <td>34.176140</td>\n",
              "      <td>-31.197864</td>\n",
              "      <td>-43.752732</td>\n",
              "      <td>288.703689</td>\n",
              "      <td>287.874752</td>\n",
              "      <td>288.703689</td>\n",
              "      <td>288.280980</td>\n",
              "      <td>-1.469946</td>\n",
              "      <td>288.703689</td>\n",
              "      <td>14.066001</td>\n",
              "      <td>16.449518</td>\n",
              "      <td>16.406338</td>\n",
              "      <td>280.362139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-18</th>\n",
              "      <td>221.612145</td>\n",
              "      <td>235.065432</td>\n",
              "      <td>203.237858</td>\n",
              "      <td>214.185710</td>\n",
              "      <td>5.187317e+07</td>\n",
              "      <td>26.699139</td>\n",
              "      <td>26.969048</td>\n",
              "      <td>-102.257286</td>\n",
              "      <td>-149.889730</td>\n",
              "      <td>269.754998</td>\n",
              "      <td>265.027331</td>\n",
              "      <td>269.754998</td>\n",
              "      <td>267.406555</td>\n",
              "      <td>-10.068371</td>\n",
              "      <td>269.754998</td>\n",
              "      <td>32.108573</td>\n",
              "      <td>24.120986</td>\n",
              "      <td>22.032708</td>\n",
              "      <td>206.623568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-25</th>\n",
              "      <td>225.235286</td>\n",
              "      <td>233.557857</td>\n",
              "      <td>221.317858</td>\n",
              "      <td>231.560429</td>\n",
              "      <td>2.702364e+07</td>\n",
              "      <td>50.411313</td>\n",
              "      <td>42.197367</td>\n",
              "      <td>110.287687</td>\n",
              "      <td>4.934801</td>\n",
              "      <td>252.030258</td>\n",
              "      <td>244.323778</td>\n",
              "      <td>252.030258</td>\n",
              "      <td>248.082161</td>\n",
              "      <td>-10.037194</td>\n",
              "      <td>246.912638</td>\n",
              "      <td>12.239999</td>\n",
              "      <td>19.742579</td>\n",
              "      <td>20.466581</td>\n",
              "      <td>239.933572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-02-01</th>\n",
              "      <td>242.860715</td>\n",
              "      <td>256.862002</td>\n",
              "      <td>229.521859</td>\n",
              "      <td>239.319571</td>\n",
              "      <td>4.383436e+07</td>\n",
              "      <td>49.334804</td>\n",
              "      <td>46.341602</td>\n",
              "      <td>-18.840361</td>\n",
              "      <td>36.136190</td>\n",
              "      <td>250.273733</td>\n",
              "      <td>244.492978</td>\n",
              "      <td>250.273733</td>\n",
              "      <td>247.105547</td>\n",
              "      <td>-1.747224</td>\n",
              "      <td>233.381934</td>\n",
              "      <td>27.391713</td>\n",
              "      <td>23.226073</td>\n",
              "      <td>22.321646</td>\n",
              "      <td>234.284716</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96465580-d17f-4c85-9995-4517dce96643')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-96465580-d17f-4c85-9995-4517dce96643 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-96465580-d17f-4c85-9995-4517dce96643');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-4d13ae07-75fb-4950-a878-657bedf7ba4e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d13ae07-75fb-4950-a878-657bedf7ba4e')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-4d13ae07-75fb-4950-a878-657bedf7ba4e button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1_monthly_mean",
              "summary": "{\n  \"name\": \"df1_monthly_mean\",\n  \"rows\": 488,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2015-01-04 00:00:00\",\n        \"max\": \"2024-05-05 00:00:00\",\n        \"num_unique_values\": 488,\n        \"samples\": [\n          \"2016-05-22 00:00:00\",\n          \"2019-09-08 00:00:00\",\n          \"2023-05-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17888.70198553206,\n        \"min\": 221.61214542857144,\n        \"max\": 70257.69531257144,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          449.11242685714285,\n          10394.686802571427,\n          27053.434151857142\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"high\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18318.62332923355,\n        \"min\": 227.142142,\n        \"max\": 72044.71986642857,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          450.73742685714285,\n          10653.669084714285,\n          27346.82896214286\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17415.600046445077,\n        \"min\": 203.23785842857143,\n        \"max\": 68761.495536,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          445.2420044285714,\n          10291.519391857142,\n          26701.528739\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17909.345570698504,\n        \"min\": 214.18571042857144,\n        \"max\": 70170.68638414286,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          446.63813557142856,\n          10493.165876000001,\n          27033.413783428572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17949523788.640682,\n        \"min\": 15307128.57142857,\n        \"max\": 109525682257.85715,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          67222442.85714285,\n          16634490473.142857,\n          12065675387.857143\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rsi_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.296526970940505,\n        \"min\": 11.213811176207814,\n        \"max\": 95.33564341006938,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          39.16075828038281,\n          60.48986185847309,\n          39.11038807869119\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rsi_14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.351709349971493,\n        \"min\": 13.789841684214423,\n        \"max\": 85.7692008395265,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          47.62105873619441,\n          52.73695707835126,\n          41.65492650971557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cci_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 71.63635996530368,\n        \"min\": -133.22417268377126,\n        \"max\": 148.77743199082246,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          -80.1439694979164,\n          72.88300635067517,\n          -7.277839278811862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cci_14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.89202164212686,\n        \"min\": -198.3598168034921,\n        \"max\": 213.2812851123728,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          -119.82478214271816,\n          84.12734275757649,\n          -55.255387565358276\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sma_50\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17302.620482763854,\n        \"min\": 233.12159090857145,\n        \"max\": 67438.35619435999,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          440.99636084857144,\n          10432.806462085715,\n          28444.601830394287\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ema_50\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17197.569112391993,\n        \"min\": 233.77345326676806,\n        \"max\": 64661.76560579897,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          442.78197661472467,\n          10333.583486537225,\n          27665.227388545605\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sma_100\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16604.885394901416,\n        \"min\": 238.07398595857143,\n        \"max\": 59166.95800797,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          428.7249281885714,\n          10206.545020227144,\n          26348.991241692856\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ema_100\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16532.296864897093,\n        \"min\": 237.81295315570813,\n        \"max\": 59920.84831117032,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          429.35976919249003,\n          9760.375912404212,\n          26332.490988119414\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"macd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1022.0293370754883,\n        \"min\": -4716.672288599776,\n        \"max\": 5054.401457435951,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          2.1990634805986082,\n          -98.14441767627874,\n          -424.1869506623428\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bollinger\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17704.05667025445,\n        \"min\": 228.51042857857144,\n        \"max\": 68745.53565862858,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          452.70336803571433,\n          10198.248249242857,\n          27952.288239464284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TrueRange\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1045.1642979073777,\n        \"min\": 2.9558564285714266,\n        \"max\": 6743.2645088571435,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          5.495422428571446,\n          362.14969285714295,\n          645.3002231428566\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atr_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1004.9867479092887,\n        \"min\": 3.352495058593701,\n        \"max\": 5268.60803718945,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          5.525713944458475,\n          371.45603551464717,\n          789.0108996079432\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atr_14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 978.804929941181,\n        \"min\": 3.827271022999383,\n        \"max\": 4670.9359409166345,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          6.122389569745275,\n          421.68189792395725,\n          874.9575970512661\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"next_day_close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17907.931312348508,\n        \"min\": 206.62356785714286,\n        \"max\": 70108.86607171429,\n        \"num_unique_values\": 488,\n        \"samples\": [\n          445.208422,\n          10491.482142714287,\n          26984.640067\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Exploring Data"
      ],
      "metadata": {
        "id": "Koi0oq7r-A9u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 7 - Day rolling averageof the closing price\n",
        "df1['7_day_rolling'] = df1['close'].rolling(window=7).mean()\n",
        "df1[['close','7_day_rolling']].loc['2023'].plot()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "_ny3B5me-D84",
        "outputId": "aed90f7d-a02e-465e-ff10-aa9f23b58d2a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Find out the highest average month\n",
        "df1.resample('ME').mean()['close'].idxmax() # it show 2024 march has highest average"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oLSTUbA1DKoz",
        "outputId": "7d024597-a4e1-473d-a857-e9686e703354"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Timestamp('2024-03-31 00:00:00')"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# calculate daily returns\n",
        "df1['daily_returns'] = df1['close'].pct_change()*100"
      ],
      "metadata": {
        "id": "A_YgtmMwENWZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# days with more than 10% change in closing price\n",
        "df1[abs(df1['daily_returns']) > 10].head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "9evKAd1uEoW6",
        "outputId": "b4554ace-552b-4606-99d0-9901ab8d2038"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  open        high         low       close      volume  \\\n",
              "date                                                                     \n",
              "2015-01-03  314.846008  315.149994  281.082001  281.082001  33054400.0   \n",
              "2015-01-13  267.394012  268.277008  219.906006  225.860992  72843904.0   \n",
              "2015-01-14  223.893997  223.893997  171.509995  178.102997  97638704.0   \n",
              "2015-01-15  176.897003  229.067001  176.897003  209.843994  81773504.0   \n",
              "2015-01-28  263.351013  266.535004  227.046005  233.914993  44352200.0   \n",
              "\n",
              "                rsi_7     rsi_14       cci_7      cci_14      sma_50  ...  \\\n",
              "date                                                                  ...   \n",
              "2015-01-03   1.938583   2.096744 -100.000000 -100.000000  303.454336  ...   \n",
              "2015-01-13  17.567030  21.177991 -181.281964 -199.978294  279.802152  ...   \n",
              "2015-01-14  10.897570  14.831818 -176.740214 -273.138124  272.537927  ...   \n",
              "2015-01-15  31.162267  29.872704  -90.847926 -172.714027  268.358331  ...   \n",
              "2015-01-28  44.517743  44.208556  -30.763321   45.286505  251.244892  ...   \n",
              "\n",
              "               sma_100     ema_100       macd   bollinger  TrueRange  \\\n",
              "date                                                                   \n",
              "2015-01-03  303.454336  303.232458  -1.030403  303.454336  34.067993   \n",
              "2015-01-13  279.802152  278.614838  -5.345769  279.802152  48.371002   \n",
              "2015-01-14  272.537927  270.465192 -10.062374  272.537927  54.350997   \n",
              "2015-01-15  268.358331  265.833750 -11.607455  268.358331  52.169998   \n",
              "2015-01-28  251.244892  248.255597  -0.500523  236.097498  39.488999   \n",
              "\n",
              "                atr_7     atr_14  next_day_close  7_day_rolling  daily_returns  \n",
              "date                                                                            \n",
              "2015-01-03  15.719617  14.951008      264.195007            NaN     -10.776686  \n",
              "2015-01-13  19.532682  18.329124      178.102997     271.743853     -15.659308  \n",
              "2015-01-14  25.156525  22.314151      209.843994     255.138995     -21.144862  \n",
              "2015-01-15  29.439795  25.492455      208.097000     244.638280      17.821709  \n",
              "2015-01-28  25.315576  23.367470      233.513000     248.387571     -11.219285  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-577b787a-4f2b-4919-9006-325b49844164\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>open</th>\n",
              "      <th>high</th>\n",
              "      <th>low</th>\n",
              "      <th>close</th>\n",
              "      <th>volume</th>\n",
              "      <th>rsi_7</th>\n",
              "      <th>rsi_14</th>\n",
              "      <th>cci_7</th>\n",
              "      <th>cci_14</th>\n",
              "      <th>sma_50</th>\n",
              "      <th>...</th>\n",
              "      <th>sma_100</th>\n",
              "      <th>ema_100</th>\n",
              "      <th>macd</th>\n",
              "      <th>bollinger</th>\n",
              "      <th>TrueRange</th>\n",
              "      <th>atr_7</th>\n",
              "      <th>atr_14</th>\n",
              "      <th>next_day_close</th>\n",
              "      <th>7_day_rolling</th>\n",
              "      <th>daily_returns</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015-01-03</th>\n",
              "      <td>314.846008</td>\n",
              "      <td>315.149994</td>\n",
              "      <td>281.082001</td>\n",
              "      <td>281.082001</td>\n",
              "      <td>33054400.0</td>\n",
              "      <td>1.938583</td>\n",
              "      <td>2.096744</td>\n",
              "      <td>-100.000000</td>\n",
              "      <td>-100.000000</td>\n",
              "      <td>303.454336</td>\n",
              "      <td>...</td>\n",
              "      <td>303.454336</td>\n",
              "      <td>303.232458</td>\n",
              "      <td>-1.030403</td>\n",
              "      <td>303.454336</td>\n",
              "      <td>34.067993</td>\n",
              "      <td>15.719617</td>\n",
              "      <td>14.951008</td>\n",
              "      <td>264.195007</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-10.776686</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-13</th>\n",
              "      <td>267.394012</td>\n",
              "      <td>268.277008</td>\n",
              "      <td>219.906006</td>\n",
              "      <td>225.860992</td>\n",
              "      <td>72843904.0</td>\n",
              "      <td>17.567030</td>\n",
              "      <td>21.177991</td>\n",
              "      <td>-181.281964</td>\n",
              "      <td>-199.978294</td>\n",
              "      <td>279.802152</td>\n",
              "      <td>...</td>\n",
              "      <td>279.802152</td>\n",
              "      <td>278.614838</td>\n",
              "      <td>-5.345769</td>\n",
              "      <td>279.802152</td>\n",
              "      <td>48.371002</td>\n",
              "      <td>19.532682</td>\n",
              "      <td>18.329124</td>\n",
              "      <td>178.102997</td>\n",
              "      <td>271.743853</td>\n",
              "      <td>-15.659308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-14</th>\n",
              "      <td>223.893997</td>\n",
              "      <td>223.893997</td>\n",
              "      <td>171.509995</td>\n",
              "      <td>178.102997</td>\n",
              "      <td>97638704.0</td>\n",
              "      <td>10.897570</td>\n",
              "      <td>14.831818</td>\n",
              "      <td>-176.740214</td>\n",
              "      <td>-273.138124</td>\n",
              "      <td>272.537927</td>\n",
              "      <td>...</td>\n",
              "      <td>272.537927</td>\n",
              "      <td>270.465192</td>\n",
              "      <td>-10.062374</td>\n",
              "      <td>272.537927</td>\n",
              "      <td>54.350997</td>\n",
              "      <td>25.156525</td>\n",
              "      <td>22.314151</td>\n",
              "      <td>209.843994</td>\n",
              "      <td>255.138995</td>\n",
              "      <td>-21.144862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-15</th>\n",
              "      <td>176.897003</td>\n",
              "      <td>229.067001</td>\n",
              "      <td>176.897003</td>\n",
              "      <td>209.843994</td>\n",
              "      <td>81773504.0</td>\n",
              "      <td>31.162267</td>\n",
              "      <td>29.872704</td>\n",
              "      <td>-90.847926</td>\n",
              "      <td>-172.714027</td>\n",
              "      <td>268.358331</td>\n",
              "      <td>...</td>\n",
              "      <td>268.358331</td>\n",
              "      <td>265.833750</td>\n",
              "      <td>-11.607455</td>\n",
              "      <td>268.358331</td>\n",
              "      <td>52.169998</td>\n",
              "      <td>29.439795</td>\n",
              "      <td>25.492455</td>\n",
              "      <td>208.097000</td>\n",
              "      <td>244.638280</td>\n",
              "      <td>17.821709</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-28</th>\n",
              "      <td>263.351013</td>\n",
              "      <td>266.535004</td>\n",
              "      <td>227.046005</td>\n",
              "      <td>233.914993</td>\n",
              "      <td>44352200.0</td>\n",
              "      <td>44.517743</td>\n",
              "      <td>44.208556</td>\n",
              "      <td>-30.763321</td>\n",
              "      <td>45.286505</td>\n",
              "      <td>251.244892</td>\n",
              "      <td>...</td>\n",
              "      <td>251.244892</td>\n",
              "      <td>248.255597</td>\n",
              "      <td>-0.500523</td>\n",
              "      <td>236.097498</td>\n",
              "      <td>39.488999</td>\n",
              "      <td>25.315576</td>\n",
              "      <td>23.367470</td>\n",
              "      <td>233.513000</td>\n",
              "      <td>248.387571</td>\n",
              "      <td>-11.219285</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-577b787a-4f2b-4919-9006-325b49844164')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-577b787a-4f2b-4919-9006-325b49844164 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-577b787a-4f2b-4919-9006-325b49844164');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b28e15dd-255d-41ae-a9b1-672a2d72f895\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b28e15dd-255d-41ae-a9b1-672a2d72f895')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b28e15dd-255d-41ae-a9b1-672a2d72f895 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Visualization"
      ],
      "metadata": {
        "id": "akE6_urmYO9s"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Daily closing Price plot\n",
        "df1['close'].plot(title='daily closing price')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "QdxQGOn5YIa-",
        "outputId": "7619d48c-a828-4790-e296-9a2fe2fec666"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# plot the yearly volume\n",
        "df1.resample('Y').sum()['volume'].plot(kind='bar', title='Yearly Volume')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 678
        },
        "id": "mDpGG63AYsP7",
        "outputId": "c301cb78-3840-4930-9b7b-61beb11230a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-11-be82666403c1>:2: FutureWarning: 'Y' is deprecated and will be removed in a future version, please use 'YE' instead.\n",
            "  df1.resample('Y').sum()['volume'].plot(kind='bar', title='Yearly Volume')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: title={'center': 'Yearly Volume'}, xlabel='date'>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bgQLXFzeVENd",
        "outputId": "ee74cdcf-5ac8-4e67-dc1a-952ed064612f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 3406 entries, 2015-01-02 to 2024-04-29\n",
            "Data columns (total 21 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   open            3406 non-null   float64\n",
            " 1   high            3406 non-null   float64\n",
            " 2   low             3406 non-null   float64\n",
            " 3   close           3406 non-null   float64\n",
            " 4   volume          3406 non-null   float64\n",
            " 5   rsi_7           3406 non-null   float64\n",
            " 6   rsi_14          3406 non-null   float64\n",
            " 7   cci_7           3406 non-null   float64\n",
            " 8   cci_14          3406 non-null   float64\n",
            " 9   sma_50          3406 non-null   float64\n",
            " 10  ema_50          3406 non-null   float64\n",
            " 11  sma_100         3406 non-null   float64\n",
            " 12  ema_100         3406 non-null   float64\n",
            " 13  macd            3406 non-null   float64\n",
            " 14  bollinger       3406 non-null   float64\n",
            " 15  TrueRange       3406 non-null   float64\n",
            " 16  atr_7           3406 non-null   float64\n",
            " 17  atr_14          3406 non-null   float64\n",
            " 18  next_day_close  3406 non-null   float64\n",
            " 19  7_day_rolling   3400 non-null   float64\n",
            " 20  daily_returns   3405 non-null   float64\n",
            "dtypes: float64(21)\n",
            "memory usage: 585.4 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plotting closing proce and 30-day rolling volume\n",
        "df1['30_day_rolling_vol']=df1['volume'].rolling(window=30).mean()\n",
        "df1['30_day_rolling_vol'].plot(legend=True)\n",
        "ax=df1['close'].plot(secondary_y=True, legend=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "W13-e53fZJcz",
        "outputId": "c979384e-e4a3-4df3-fe7f-a7b1431388fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1[['close','30_day_rolling_vol']].corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "KR8h6XoeadJS",
        "outputId": "f2906eae-0e53-41a3-9d0b-c2cbf4d3fc6b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       close  30_day_rolling_vol\n",
              "close               1.000000            0.734389\n",
              "30_day_rolling_vol  0.734389            1.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fe75d2c5-60de-49a3-af5a-dd01b5ee61e7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close</th>\n",
              "      <th>30_day_rolling_vol</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>close</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.734389</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30_day_rolling_vol</th>\n",
              "      <td>0.734389</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe75d2c5-60de-49a3-af5a-dd01b5ee61e7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fe75d2c5-60de-49a3-af5a-dd01b5ee61e7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fe75d2c5-60de-49a3-af5a-dd01b5ee61e7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-7340a911-8f3f-4559-b602-8dd5903532c4\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7340a911-8f3f-4559-b602-8dd5903532c4')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-7340a911-8f3f-4559-b602-8dd5903532c4 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df1[['close','30_day_rolling_vol']]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1878155915931215,\n        \"min\": 0.7343886431438813,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.7343886431438813,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"30_day_rolling_vol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1878155915931215,\n        \"min\": 0.7343886431438813,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.7343886431438813\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Manipulation"
      ],
      "metadata": {
        "id": "y1iaisvJa3r1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Identify Missing Values\n",
        "df1.isnull().sum()\n",
        "\n",
        "# Filling missing values\n",
        "df1['30_day_rolling_vol'].fillna(method='bfill', inplace=True)\n",
        "\n",
        "# Interpolate missing 7 day rolling\n",
        "df1['7_day_rolling'].interpolate(methode='Linier',inplace = True)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5P8zAU6va0TI",
        "outputId": "e05826fa-d57e-40d0-ea68-b9346e1f5ce6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-15-1bad6d8dc09d>:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n",
            "  df1['30_day_rolling_vol'].fillna(method='bfill', inplace=True)\n",
            "<ipython-input-15-1bad6d8dc09d>:8: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df1['7_day_rolling'].interpolate(methode='Linier',inplace = True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 774
        },
        "outputId": "92ce0169-e1b6-4eaa-fb96-f303c2fc10ab",
        "id": "wHYkqYOhbqv2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "open                  0\n",
              "high                  0\n",
              "low                   0\n",
              "close                 0\n",
              "volume                0\n",
              "rsi_7                 0\n",
              "rsi_14                0\n",
              "cci_7                 0\n",
              "cci_14                0\n",
              "sma_50                0\n",
              "ema_50                0\n",
              "sma_100               0\n",
              "ema_100               0\n",
              "macd                  0\n",
              "bollinger             0\n",
              "TrueRange             0\n",
              "atr_7                 0\n",
              "atr_14                0\n",
              "next_day_close        0\n",
              "7_day_rolling         6\n",
              "daily_returns         1\n",
              "30_day_rolling_vol    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>open</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>high</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>low</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>close</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>volume</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rsi_7</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rsi_14</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cci_7</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cci_14</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sma_50</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ema_50</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sma_100</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ema_100</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>macd</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bollinger</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TrueRange</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>atr_7</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>atr_14</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>next_day_close</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7_day_rolling</th>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>daily_returns</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30_day_rolling_vol</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Extract time variables\n",
        "df1['year'] = df1.index.year\n",
        "df1['month'] = df1.index.month\n",
        "df1['day'] = df1.index.day\n",
        "df1['dayname'] = df1.index.day_name()\n",
        "df1['weekday_numeric'] = df1.index.weekday\n",
        "\n",
        "df1['is_weekend'] = df1['dayname'].apply(lambda x: x in ['Saturday', 'Sunday'])\n",
        "df1.info()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i7JGMdYKeAIj",
        "outputId": "8cf077f6-4e47-4007-9c43-38be3e497a53"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 3406 entries, 2015-01-02 to 2024-04-29\n",
            "Data columns (total 28 columns):\n",
            " #   Column              Non-Null Count  Dtype  \n",
            "---  ------              --------------  -----  \n",
            " 0   open                3406 non-null   float64\n",
            " 1   high                3406 non-null   float64\n",
            " 2   low                 3406 non-null   float64\n",
            " 3   close               3406 non-null   float64\n",
            " 4   volume              3406 non-null   float64\n",
            " 5   rsi_7               3406 non-null   float64\n",
            " 6   rsi_14              3406 non-null   float64\n",
            " 7   cci_7               3406 non-null   float64\n",
            " 8   cci_14              3406 non-null   float64\n",
            " 9   sma_50              3406 non-null   float64\n",
            " 10  ema_50              3406 non-null   float64\n",
            " 11  sma_100             3406 non-null   float64\n",
            " 12  ema_100             3406 non-null   float64\n",
            " 13  macd                3406 non-null   float64\n",
            " 14  bollinger           3406 non-null   float64\n",
            " 15  TrueRange           3406 non-null   float64\n",
            " 16  atr_7               3406 non-null   float64\n",
            " 17  atr_14              3406 non-null   float64\n",
            " 18  next_day_close      3406 non-null   float64\n",
            " 19  7_day_rolling       3400 non-null   float64\n",
            " 20  daily_returns       3405 non-null   float64\n",
            " 21  30_day_rolling_vol  3406 non-null   float64\n",
            " 22  year                3406 non-null   int32  \n",
            " 23  month               3406 non-null   int32  \n",
            " 24  day                 3406 non-null   int32  \n",
            " 25  dayname             3406 non-null   object \n",
            " 26  weekday_numeric     3406 non-null   int32  \n",
            " 27  is_weekend          3406 non-null   bool   \n",
            "dtypes: bool(1), float64(22), int32(4), object(1)\n",
            "memory usage: 695.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Feature engineering - lagged values\n",
        "df1['close_lag1'] = df1['close'].shift(1)\n",
        "df1['close_lag2'] = df1['close'].shift(2)\n",
        "df1['close_lag1']"
      ],
      "metadata": {
        "id": "P-bVZ9dkflhX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 490
        },
        "outputId": "15a8daea-9926-4adf-effd-2172015e6a55"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "date\n",
              "2015-01-02             NaN\n",
              "2015-01-03      315.032013\n",
              "2015-01-04      281.082001\n",
              "2015-01-05      264.195007\n",
              "2015-01-06      274.473999\n",
              "                  ...     \n",
              "2024-04-25    64276.898438\n",
              "2024-04-26    64481.707031\n",
              "2024-04-27    63755.320313\n",
              "2024-04-28    63419.140625\n",
              "2024-04-29    63113.230469\n",
              "Name: close_lag1, Length: 3406, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>close_lag1</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015-01-02</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-03</th>\n",
              "      <td>315.032013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-04</th>\n",
              "      <td>281.082001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-05</th>\n",
              "      <td>264.195007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-06</th>\n",
              "      <td>274.473999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-04-25</th>\n",
              "      <td>64276.898438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-04-26</th>\n",
              "      <td>64481.707031</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-04-27</th>\n",
              "      <td>63755.320313</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-04-28</th>\n",
              "      <td>63419.140625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-04-29</th>\n",
              "      <td>63113.230469</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3406 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Seasonal Decompostition\n",
        "seasonal cycles (seasonalit)\n",
        "1. Seasonal cycles are constant in value (additive)\n",
        "2. Multiplicative - seasonal cycles are proportional to the trend\n",
        "\n",
        "How to identify the seasonality type ? no statistically test to determine the seasonality type.\n",
        "Option 1. Data visualization\n",
        "Option 2. Model performance\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "WCTkI8XpgMcd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.graphics.tsaplots import month_plot, quarter_plot\n",
        "from statsmodels.tsa.seasonal import seasonal_decompose"
      ],
      "metadata": {
        "id": "BiD_Q0WBgPF8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plotting the monthly seasonality\n",
        "month_plot(df1['close'].resample('M').mean(), ylabel = 'Closing')\n",
        "plt.title('Monthly Seasonality',)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 508
        },
        "id": "Lcw_YPV0iF8k",
        "outputId": "83be3a40-948b-429b-9c5f-8d10cb8c6cb7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-20-aed29d94d7cf>:2: FutureWarning: 'M' is deprecated and will be removed in a future version, please use 'ME' instead.\n",
            "  month_plot(df1['close'].resample('M').mean(), ylabel = 'Closing')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plotting the quarterly seasonality\n",
        "quarter_plot(df1['close'].resample('Q').mean(),\n",
        "             ylabel='Closing Price')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "cRQMLL0NWioP",
        "outputId": "a981549e-5a67-4eb4-c4b5-6c0c88b6659b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-21-f9fc1147e4d3>:2: FutureWarning: 'Q' is deprecated and will be removed in a future version, please use 'QE' instead.\n",
            "  quarter_plot(df1['close'].resample('Q').mean(),\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Decomposition Plots for Bitcoin Data"
      ],
      "metadata": {
        "id": "71Mii15ChtvL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "decomposition = seasonal_decompose(df1['close'],\n",
        "                   model='multiplicative',\n",
        "                   period=365)\n",
        "fig = decomposition.plot()\n",
        "fig.set_size_inches(10,8)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 626
        },
        "id": "uCbH62Rqgqt9",
        "outputId": "268ae3c4-eb23-4a44-c799-054713bdf824"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plotting the quarterly seasonality\n",
        "quarter_plot(df1['close'].resample('QE').mean(), ylabel='Closing Price')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "outputId": "cfb8b997-9640-43aa-da0d-29306ca3fdbc",
        "id": "6d0no9xnjLMA"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Load new dataframe\n",
        "\n",
        "df_choco = pd.read_csv(\"Chocolate_Sales.csv\", parse_dates=True)\n",
        "\n",
        "df_choco.columns = ['Salesperson', 'Country', 'Product', 'Date', 'Revenue', 'UnitsSold']\n",
        "\n",
        "#df_choco = pd.read_csv('Chocolate_Sales.csv', index_col=0, parse_dates=True)\n",
        "#df_choco.columns = ['Salesperson','Country','Product','Date','Revenue','Boxesshipped']\n",
        "print(df_choco.info())\n",
        "print(df_choco.head())\n"
      ],
      "metadata": {
        "id": "9p8cIQEejd6n",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b9ec337b-95a2-455b-cc68-8590d94073b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1094 entries, 0 to 1093\n",
            "Data columns (total 6 columns):\n",
            " #   Column       Non-Null Count  Dtype \n",
            "---  ------       --------------  ----- \n",
            " 0   Salesperson  1094 non-null   object\n",
            " 1   Country      1094 non-null   object\n",
            " 2   Product      1094 non-null   object\n",
            " 3   Date         1094 non-null   object\n",
            " 4   Revenue      1094 non-null   object\n",
            " 5   UnitsSold    1094 non-null   int64 \n",
            "dtypes: int64(1), object(5)\n",
            "memory usage: 51.4+ KB\n",
            "None\n",
            "      Salesperson    Country              Product       Date   Revenue  \\\n",
            "0  Jehu Rudeforth         UK      Mint Chip Choco  04-Jan-22   $5,320    \n",
            "1     Van Tuxwell      India        85% Dark Bars  01-Aug-22   $7,896    \n",
            "2    Gigi Bohling      India  Peanut Butter Cubes  07-Jul-22   $4,501    \n",
            "3    Jan Morforth  Australia  Peanut Butter Cubes  27-Apr-22  $12,726    \n",
            "4  Jehu Rudeforth         UK  Peanut Butter Cubes  24-Feb-22  $13,685    \n",
            "\n",
            "   UnitsSold  \n",
            "0        180  \n",
            "1         94  \n",
            "2         91  \n",
            "3        342  \n",
            "4        184  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(type(df_choco['Date']))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BHDPJHISWHu6",
        "outputId": "ec4d5d61-6a60-4a7d-8471-3dde0f5655cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.series.Series'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: how to convert index to datetime\n",
        "\n",
        "df_choco['Date'] = pd.to_datetime(df_choco['Date'], format='%d-%b-%y')\n",
        "df_choco = df_choco.set_index('Date')"
      ],
      "metadata": {
        "id": "Ty-ck1VBWQQG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_choco.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "g-SrU3OAWSVI",
        "outputId": "6901a903-b9cb-4149-cf70-91f6c82a79a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Salesperson    Country              Product   Revenue  \\\n",
              "Date                                                                   \n",
              "2022-01-04  Jehu Rudeforth         UK      Mint Chip Choco   $5,320    \n",
              "2022-08-01     Van Tuxwell      India        85% Dark Bars   $7,896    \n",
              "2022-07-07    Gigi Bohling      India  Peanut Butter Cubes   $4,501    \n",
              "2022-04-27    Jan Morforth  Australia  Peanut Butter Cubes  $12,726    \n",
              "2022-02-24  Jehu Rudeforth         UK  Peanut Butter Cubes  $13,685    \n",
              "\n",
              "            UnitsSold  \n",
              "Date                   \n",
              "2022-01-04        180  \n",
              "2022-08-01         94  \n",
              "2022-07-07         91  \n",
              "2022-04-27        342  \n",
              "2022-02-24        184  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-022f7a3b-b068-4116-aa4d-a88b795dec6d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Salesperson</th>\n",
              "      <th>Country</th>\n",
              "      <th>Product</th>\n",
              "      <th>Revenue</th>\n",
              "      <th>UnitsSold</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-01-04</th>\n",
              "      <td>Jehu Rudeforth</td>\n",
              "      <td>UK</td>\n",
              "      <td>Mint Chip Choco</td>\n",
              "      <td>$5,320</td>\n",
              "      <td>180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-08-01</th>\n",
              "      <td>Van Tuxwell</td>\n",
              "      <td>India</td>\n",
              "      <td>85% Dark Bars</td>\n",
              "      <td>$7,896</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-07-07</th>\n",
              "      <td>Gigi Bohling</td>\n",
              "      <td>India</td>\n",
              "      <td>Peanut Butter Cubes</td>\n",
              "      <td>$4,501</td>\n",
              "      <td>91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-04-27</th>\n",
              "      <td>Jan Morforth</td>\n",
              "      <td>Australia</td>\n",
              "      <td>Peanut Butter Cubes</td>\n",
              "      <td>$12,726</td>\n",
              "      <td>342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-24</th>\n",
              "      <td>Jehu Rudeforth</td>\n",
              "      <td>UK</td>\n",
              "      <td>Peanut Butter Cubes</td>\n",
              "      <td>$13,685</td>\n",
              "      <td>184</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-022f7a3b-b068-4116-aa4d-a88b795dec6d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-022f7a3b-b068-4116-aa4d-a88b795dec6d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-022f7a3b-b068-4116-aa4d-a88b795dec6d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e7a6387c-df91-4e98-9ac1-3c8d61bb16ec\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7a6387c-df91-4e98-9ac1-3c8d61bb16ec')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e7a6387c-df91-4e98-9ac1-3c8d61bb16ec button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_choco",
              "summary": "{\n  \"name\": \"df_choco\",\n  \"rows\": 1094,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-01-03 00:00:00\",\n        \"max\": \"2022-08-31 00:00:00\",\n        \"num_unique_values\": 168,\n        \"samples\": [\n          \"2022-06-22 00:00:00\",\n          \"2022-06-30 00:00:00\",\n          \"2022-04-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salesperson\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"Barr Faughny\",\n          \"Kaine Padly\",\n          \"Jehu Rudeforth\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"UK\",\n          \"India\",\n          \"Canada\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"Mint Chip Choco\",\n          \"Fruit & Nut Bars\",\n          \"Eclairs\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Revenue\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 827,\n        \"samples\": [\n          \"$9,660 \",\n          \"$3,318 \",\n          \"$4,347 \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UnitsSold\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 121,\n        \"min\": 1,\n        \"max\": 709,\n        \"num_unique_values\": 385,\n        \"samples\": [\n          316,\n          322,\n          518\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_choco['Revenue'] = df_choco['Revenue'].replace('[\\$,]', '', regex=True).astype(float)\n"
      ],
      "metadata": {
        "id": "fSgpgJH-QUkF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_choco.info()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7cZR6fWoOX5U",
        "outputId": "162c7863-7a31-4b3d-e194-47eac509e877"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 1094 entries, 2022-01-04 to 2022-05-23\n",
            "Data columns (total 5 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   Salesperson  1094 non-null   object \n",
            " 1   Country      1094 non-null   object \n",
            " 2   Product      1094 non-null   object \n",
            " 3   Revenue      1094 non-null   float64\n",
            " 4   UnitsSold    1094 non-null   int64  \n",
            "dtypes: float64(1), int64(1), object(3)\n",
            "memory usage: 51.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(pd.infer_freq(df_choco.index))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_tTK5wmOZbiJ",
        "outputId": "f2a392cc-b084-49c0-f565-5e8a78bbccba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_choco = df_choco.resample('MS').sum()  # Resample to monthly start ('MS')"
      ],
      "metadata": {
        "id": "zgRtXOMsZkam"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_choco = df_choco.fillna(0)  # Fill missing values with 0"
      ],
      "metadata": {
        "id": "I3d0Oo50ZuxF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(pd.infer_freq(df_choco.index))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rD5zy1d2Z0VK",
        "outputId": "14b37f1f-0e2d-49d8-e18a-a6fe04e21a4e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MS\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df_choco.index.min(),df_choco.index.max())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pNFTYgMWaS4f",
        "outputId": "6b346d4f-688e-4c73-effd-1eef101fd914"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2022-01-01 00:00:00 2022-08-01 00:00:00\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Resample to monthly frequency and pad missing months with zeros\n",
        "df_choco = df_choco.resample('MS').sum().fillna(0)"
      ],
      "metadata": {
        "id": "X8tqsvPoaxbZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(df_choco.index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ASMBnreHa5s0",
        "outputId": "778bfae5-eef2-4247-ecfe-7b957a05a293"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "full_date_range = pd.date_range(start=df_choco.index.min(), periods=12, freq='MS')\n",
        "df_choco = df_choco.reindex(full_date_range, fill_value=0)"
      ],
      "metadata": {
        "id": "fFDuQ23ebC5A"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from statsmodels.graphics.tsaplots import month_plot\n",
        "\n",
        "# Create the month plot\n",
        "fig, ax = plt.subplots()\n",
        "month_plot(df_choco['Revenue'], ylabel='Amount', ax=ax)\n",
        "\n",
        "# Manually set x-axis ticks and labels\n",
        "ax.set_xticks(range(len(df_choco)))  # Set tick locations\n",
        "ax.set_xticklabels(df_choco.index.strftime('%b'))  # Set tick labels (abbreviated month names)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "DWHdJg8_MGNT",
        "outputId": "91ee3f26-86b0-4f37-ab96-86dd477d41f7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}